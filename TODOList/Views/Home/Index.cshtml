@{
    ViewBag.Title = "Home Page";
}

@model TODOList.Models.ViewModels.TODOViewModel

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>TODO List</title>
    <script src="~/Scripts/vue.min.js"></script>
    <link rel="stylesheet" href="~/Content/Site.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
</head>
<body>
    <div id="app">
        <form id="todoForm">
            <input id="todoItemName" type="text" placeholder="New TODO" />
            <input type="button" value="Add" v-on:click="add()" />
        </form>
        <ul id="todoList">
            <li v-for="(item, index) in todoItems" key="item.id" v-bind:id="item.ID">
                <input type="text" v-model="item.TODOItemName" v-bind:id="item.TODOItemID" />
                <button class="fa fa-check" v-on:click="complete(item.TODOItemID, item.IsComplete, index)" v-model="item.IsComplete"/>
                <button class="fa fa-trash" v-on:click="remove(item.TODOItemID, index)" />
                <button class="fa fa-save" v-on:click="update(item.TODOItemID, item.TODOItemName)" />
            </li>
        </ul>
    </div>
</body>
</html>

<script>

    var vm = new Vue({
        el: '#app',
        data: {
            todoItems: []
        },
        mounted () {
            this.loadTodoList();
        },
        updated ()
        {
            vm.todoItems.forEach(function(element) {
                if (element.IsComplete) {
                    document.getElementById(element.TODOItemID).style.textDecoration = "line-through";
                }
            });
        },
        methods: {
            loadTodoList() {
                setTimeout(() => {
                    this.todoItems = @(Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.TODOList)));
                }, 300)
            },
            complete: function (itemID, isComplete, index) {
                var tmpObj = {
                    id: itemID,
                    isComplete: !isComplete
                };

                if (tmpObj.isComplete) {
                    document.getElementById(itemID).style.textDecoration = "line-through";
                }
                else {
                    document.getElementById(itemID).style.textDecoration = "initial";
                }

                var req = new XMLHttpRequest();
                req.open('POST', '@Url.Action("Complete", "Home")', true);
                req.setRequestHeader('Content-Type', 'application/json');
                req.send(JSON.stringify(tmpObj));

                var item = this.todoItems.find(x => x.TODOItemID == itemID);
                if (item) {
                    item.IsComplete = !item.IsComplete;
                    Vue.set(vm.todoItems, index, item);
                }
            },
            remove: function (itemID, index) {
                var tmpObj = {
                    id: itemID
                };

                var req = new XMLHttpRequest();
                req.open('POST', '@Url.Action("Delete", "Home")', true);
                req.setRequestHeader('Content-Type', 'application/json');
                req.send(JSON.stringify(tmpObj));

                this.$delete(this.todoItems, index);
            },
            update: function (itemID, item) {
                var tmpObj = {
                    id: itemID,
                    todoItemName: item
                };

                var req = new XMLHttpRequest();
                req.open('POST', '@Url.Action("Update", "Home")', true);
                req.setRequestHeader('Content-Type', 'application/json');
                req.send(JSON.stringify(tmpObj));
            },
            add: function () {
                var tmpObj = {
                    todoItemName: document.getElementById("todoItemName").value
                }

                document.getElementById("todoItemName").value = "";
                event.preventDefault();
                var req = new XMLHttpRequest();
                req.onreadystatechange = function() {
                    if (this.readyState == 4 && this.status == 200) {
                        vm.todoItems.push(JSON.parse(this.responseText));
                    }
                };

                req.open('POST', '@Url.Action("Add", "Home")', true);
                req.setRequestHeader('Content-Type', 'application/json');
                req.send(JSON.stringify(tmpObj));
            }
        }
    })

</script>
